{"version":3,"file":"http.js","sourceRoot":"","sources":["../src/http.ts"],"names":[],"mappings":";AAAA,wBAAwB;AACxB,2BAA2B;AAC3B,sBAAsB;;;;;AAEtB,gDAAwB;AAExB,MAAM,MAAM,GAAG,cAAI,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC5C,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC3D,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;QACpB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,IAAI,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;QAClC,QAAQ,GAAG,CAAC,MAAM,EAAE,WAAW,EAAE,EAAE,CAAC;YAClC,KAAK,KAAK,CAAC,CAAC,CAAC;gBACX,GAAG,CAAC,GAAG,CACL,IAAI,CAAC,SAAS,CAAC;oBACb,KAAK,EAAE;wBACL;4BACE,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,EAAE;yBACR;wBACD;4BACE,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,EAAE;yBACR;qBACF;iBACF,CAAC,CACH,CAAC;gBACF,MAAM;YACR,CAAC;YAED,KAAK,MAAM,CAAC,CAAC,CAAC;gBACZ,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;gBACrD,MAAM;YACR,CAAC;YAED,KAAK,KAAK,CAAC,CAAC,CAAC;gBACX,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;gBACrD,MAAM;YACR,CAAC;YAED,KAAK,OAAO,CAAC,CAAC,CAAC;gBACb,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;gBACrD,MAAM;YACR,CAAC;YAED,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACd,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;gBACrD,MAAM;YACR,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACvB,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC","sourcesContent":["// import \"@/asyncSync\";\n// import \"@/eventEmitter\";\n// import \"@/promise\";\n\nimport http from \"http\";\n\nconst server = http.createServer((req, res) => {\n  res.writeHead(200, { \"Content-Type\": \"application/json\" });\n  if (req.url === \"/\") {\n    res.end(JSON.stringify({ message: \"Hello, 모두연구소!\" }));\n  }\n\n  if (req.url?.startsWith(\"/users\")) {\n    switch (req.method?.toLowerCase()) {\n      case \"get\": {\n        res.end(\n          JSON.stringify({\n            users: [\n              {\n                name: \"김모두\",\n                age: 30,\n              },\n              {\n                name: \"이모두\",\n                age: 28,\n              },\n            ],\n          })\n        );\n        break;\n      }\n\n      case \"post\": {\n        res.end(JSON.stringify({ message: \"User created\" }));\n        break;\n      }\n\n      case \"put\": {\n        res.end(JSON.stringify({ message: \"User updated\" }));\n        break;\n      }\n\n      case \"patch\": {\n        res.end(JSON.stringify({ message: \"User patched\" }));\n        break;\n      }\n\n      case \"delete\": {\n        res.end(JSON.stringify({ message: \"User deleted\" }));\n        break;\n      }\n    }\n  }\n});\n\nserver.listen(8080, () => {\n  console.log(\"Server is running on port 8080\");\n});\n"]}