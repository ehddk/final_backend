{"version":3,"file":"adminUsers.router.js","sourceRoot":"","sources":["../../../../src/api/users/router/adminUsers.router.ts"],"names":[],"mappings":";;;;;AAAA,yGAA+E;AAC/E,sDAA8B;AAC9B,qEAAqE;AACrE,0FAA0E;AAC1E,mFAGsD;AACtD,iGAA6F;AAC7F,0GAAsG;AACtG,iDAAgD;AAChD,uCAAyC;AAEzC,4FAAwF;AAExF,MAAM,gBAAgB,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAE1C,MAAM,mBAAmB,GAAG,IAAI,+BAAmB,CACjD,IAAI,gCAAgB,CAClB,IAAI,gDAAsB,EAAE,EAC5B,IAAI,sDAAyB,EAAE,EAC/B,IAAI,gDAAsB,EAAE,CAC7B,CACF,CAAC;AAEF,2BAA2B;AAC3B,MAAM,iBAAiB,GAAG;IACxB,qBAAqB;IACrB,SAAS,EAAE,kBAAkB;IAC7B,qBAAqB;IACrB,QAAQ,EAAE,0BAA0B;IACpC,kBAAkB;IAClB,WAAW,EAAE,kBAAkB;IAC/B,kBAAkB;IAClB,WAAW,EAAE,0BAA0B;IACvC,kBAAkB;IAClB,WAAW,EAAE,0BAA0B;CAC/B,CAAC;AAEX,gBAAgB,CAAC,GAAG,CAClB,IAAA,uBAAW,EAAC,iBAAiB,CAAC,SAAS,EAAE,sBAAY,CAAC,eAAe,CAAC,EACtE,mBAAmB,CAAC,QAAQ,CAC7B,CAAC;AACF,gBAAgB,CAAC,GAAG,CAClB,IAAA,uBAAW,EAAC,iBAAiB,CAAC,QAAQ,EAAE,sBAAY,CAAC,eAAe,CAAC;AACrE,yCAAyC;AACzC,mBAAmB,CAAC,OAAO,CAC5B,CAAC;AACF,gBAAgB,CAAC,IAAI,CACnB,IAAA,uBAAW,EAAC,iBAAiB,CAAC,WAAW,EAAE,sBAAY,CAAC,eAAe,CAAC,EACxE,IAAA,gCAAQ,EAAC,sCAAmB,CAAC,EAC7B,mBAAmB,CAAC,UAAU,CAC/B,CAAC;AACF,gBAAgB,CAAC,GAAG,CAClB,IAAA,uBAAW,EAAC,iBAAiB,CAAC,WAAW,EAAE,sBAAY,CAAC,eAAe,CAAC,EACxE,IAAA,gCAAQ,EAAC,sCAAmB,CAAC,EAC7B,mBAAmB,CAAC,UAAU,CAC/B,CAAC;AACF,gBAAgB,CAAC,MAAM,CACrB,IAAA,uBAAW,EAAC,iBAAiB,CAAC,WAAW,EAAE,sBAAY,CAAC,eAAe,CAAC,EACxE,mBAAmB,CAAC,UAAU,CAC/B,CAAC;AAEF,kBAAe,gBAAgB,CAAC","sourcesContent":["import AdminUserController from \"@/api/users/controller/adminUsers.controller\";\nimport express from \"express\";\nimport { UsersServiceImpl } from \"@/api/users/service/users.service\";\nimport { validate } from \"@/api/common/middlewares/validation.middleware\";\nimport {\n  createUserValidator,\n  updateUserValidator,\n} from \"@/api/users/dto/validations/users.validation\";\nimport { MongooseUserRepository } from \"@/api/users/repository/user/mongooseUser.repository\";\nimport { MongooseProfileRepository } from \"@/api/users/repository/profile/mongooseProfile.repository\";\nimport { extractPath } from \"@/utils/path.util\";\nimport { ROUTES_INDEX } from \"@/routers\";\nimport { authRoleMiddleware } from \"@/api/common/middlewares/authRole.middleware\";\nimport { MongooseCartRepository } from \"@/api/carts/repository/mongooseCart.repository\";\n\nconst adminUsersRouter = express.Router();\n\nconst adminUserController = new AdminUserController(\n  new UsersServiceImpl(\n    new MongooseUserRepository(),\n    new MongooseProfileRepository(),\n    new MongooseCartRepository()\n  )\n);\n\n/** 관리자 유저 관련 API 경로 객체  */\nconst ADMIN_USER_ROUTES = {\n  /** 유저 목록 조회 (관리자) */\n  GET_USERS: `/admin-api/users`,\n  /** 유저 상세 조회 (관리자) */\n  GET_USER: `/admin-api/users/:userId`,\n  /** 유저 생성 (관리자) */\n  CREATE_USER: `/admin-api/users`,\n  /** 유저 수정 (관리자) */\n  UPDATE_USER: `/admin-api/users/:userId`,\n  /** 유저 삭제 (관리자) */\n  DELETE_USER: `/admin-api/users/:userId`,\n} as const;\n\nadminUsersRouter.get(\n  extractPath(ADMIN_USER_ROUTES.GET_USERS, ROUTES_INDEX.ADMIN_USERS_API),\n  adminUserController.getUsers\n);\nadminUsersRouter.get(\n  extractPath(ADMIN_USER_ROUTES.GET_USER, ROUTES_INDEX.ADMIN_USERS_API),\n  // authRoleMiddleware([\"user\", \"admin\"]),\n  adminUserController.getUser\n);\nadminUsersRouter.post(\n  extractPath(ADMIN_USER_ROUTES.CREATE_USER, ROUTES_INDEX.ADMIN_USERS_API),\n  validate(createUserValidator),\n  adminUserController.createUser\n);\nadminUsersRouter.put(\n  extractPath(ADMIN_USER_ROUTES.UPDATE_USER, ROUTES_INDEX.ADMIN_USERS_API),\n  validate(updateUserValidator),\n  adminUserController.updateUser\n);\nadminUsersRouter.delete(\n  extractPath(ADMIN_USER_ROUTES.DELETE_USER, ROUTES_INDEX.ADMIN_USERS_API),\n  adminUserController.deleteUser\n);\n\nexport default adminUsersRouter;\n"]}