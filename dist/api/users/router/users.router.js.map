{"version":3,"file":"users.router.js","sourceRoot":"","sources":["../../../../src/api/users/router/users.router.ts"],"names":[],"mappings":";AAAA,gDAAgD;;;;;AAEhD,+FAAsE;AACtE,sDAA8B;AAC9B,qEAAqE;AACrE,iGAA6F;AAC7F,0GAAsG;AACtG,iDAAgD;AAChD,uCAAyC;AACzC,sFAAkF;AAClF,sFAAkF;AAClF,4FAAwF;AAExF,MAAM,UAAU,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEpC,MAAM,eAAe,GAAG,IAAI,0BAAe,CACzC,IAAI,gCAAgB,CAClB,IAAI,gDAAsB,EAAE,EAC5B,IAAI,sDAAyB,EAAE,EAC/B,IAAI,gDAAsB,EAAE,CAC7B,CACF,CAAC;AAEF,MAAM,WAAW,GAAG;IAClB,WAAW;IACX,OAAO,EAAE,YAAY;IACrB,cAAc;IACd,WAAW,EAAE,oBAAoB;IACjC,cAAc;IACd,cAAc,EAAE,oBAAoB;IACpC,UAAU;IACV,MAAM,EAAG,mBAAmB;CACpB,CAAC;AAEX,UAAU,CAAC,IAAI,CACb,IAAA,uBAAW,EAAC,WAAW,CAAC,OAAO,EAAE,sBAAY,CAAC,SAAS,CAAC,EACxD,eAAe,CAAC,MAAM,CACvB,CAAC;AACF,UAAU,CAAC,GAAG,CACZ,IAAA,uBAAW,EAAC,WAAW,CAAC,WAAW,EAAE,sBAAY,CAAC,SAAS,CAAC,EAC5D,IAAA,wCAAkB,EAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,EACrC,wCAAkB,EAClB,eAAe,CAAC,SAAS,CAC1B,CAAC;AACF,UAAU,CAAC,GAAG,CACZ,IAAA,uBAAW,EAAC,WAAW,CAAC,cAAc,EAAE,sBAAY,CAAC,SAAS,CAAC,EAC/D,IAAA,wCAAkB,EAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,EACrC,wCAAkB,EAClB,eAAe,CAAC,YAAY,CAC7B,CAAC;AAEF,UAAU,CAAC,IAAI,CACb,IAAA,uBAAW,EAAC,WAAW,CAAC,MAAM,EAAC,sBAAY,CAAC,SAAS,CAAC,EACtD,eAAe,CAAC,MAAM,CACvB,CAAA;AAED,kBAAe,UAAU,CAAC","sourcesContent":["// Router -> Controller -> Service -> Repository\n\nimport UsersController from \"@/api/users/controller/users.controller\";\nimport express from \"express\";\nimport { UsersServiceImpl } from \"@/api/users/service/users.service\";\nimport { MongooseUserRepository } from \"@/api/users/repository/user/mongooseUser.repository\";\nimport { MongooseProfileRepository } from \"@/api/users/repository/profile/mongooseProfile.repository\";\nimport { extractPath } from \"@/utils/path.util\";\nimport { ROUTES_INDEX } from \"@/routers\";\nimport { authUserMiddleware } from \"@/api/common/middlewares/authUser.middleware\";\nimport { authRoleMiddleware } from \"@/api/common/middlewares/authRole.middleware\";\nimport { MongooseCartRepository } from \"@/api/carts/repository/mongooseCart.repository\";\n\nconst userRouter = express.Router();\n\nconst usersController = new UsersController(\n  new UsersServiceImpl(\n    new MongooseUserRepository(),\n    new MongooseProfileRepository(),\n    new MongooseCartRepository()\n  )\n);\n\nconst USER_ROUTES = {\n  /** 회원가입 */\n  SIGN_UP: `/api/users`,\n  /** 내 정보 조회 */\n  GET_MY_INFO: `/api/users/:userId`,\n  /** 내 정보 수정 */\n  UPDATE_MY_INFO: `/api/users/:userId`,\n  /**로그아웃 */\n  LOGOUT : `/api/users/logout`\n} as const;\n\nuserRouter.post(\n  extractPath(USER_ROUTES.SIGN_UP, ROUTES_INDEX.USERS_API),\n  usersController.signUp\n);\nuserRouter.get(\n  extractPath(USER_ROUTES.GET_MY_INFO, ROUTES_INDEX.USERS_API),\n  authRoleMiddleware([\"user\", \"admin\"]),\n  authUserMiddleware,\n  usersController.getMyInfo\n);\nuserRouter.put(\n  extractPath(USER_ROUTES.UPDATE_MY_INFO, ROUTES_INDEX.USERS_API),\n  authRoleMiddleware([\"user\", \"admin\"]),\n  authUserMiddleware,\n  usersController.updateMyInfo\n);\n\nuserRouter.post(\n  extractPath(USER_ROUTES.LOGOUT,ROUTES_INDEX.USERS_API),\n  usersController.logout\n)\n\nexport default userRouter;\n"]}