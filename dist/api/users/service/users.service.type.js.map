{"version":3,"file":"users.service.type.js","sourceRoot":"","sources":["../../../../src/api/users/service/users.service.type.ts"],"names":[],"mappings":"","sourcesContent":["import { GetUserResponseDTO } from \"@/api/users/dto/getUserResponse.dto\";\nimport { GetUsersResponseDTO } from \"@/api/users/dto/getUsersResponse.dto\";\nimport { UserResponseDTO } from \"@/api/users/dto/userResponse.dto\";\n\nexport interface UserService {\n  /** 유저 목록 조회 */\n  getUsers(): Promise<GetUsersResponseDTO[]>;\n  /** 유저 조회 */\n  getUser(userId: string): Promise<GetUserResponseDTO | null>;\n  /** 유저 생성 */\n  createUser(\n    params: Omit<IUser, \"id\" | \"role\" | \"profile\" | \"cart\"> & {\n      profile: Omit<IProfile, \"id\" | \"delivery\"> \n    }\n  ): Promise<UserResponseDTO>;\n  /** 유저 수정 */\n  updateUser(\n    userId: string,\n    params: Partial<\n      Omit<IUser, \"id\" | \"role\" | \"profile\" | \"orders\"> & {\n        profile: Omit<IProfile, \"id\" | \"delivery\">;\n      }\n    >\n  ): Promise<void>;\n  /** 유저 삭제 */\n  deleteUser(userId: string): Promise<void>;\n  /** 유저 대량 삭제 */\n  deleteUsers(ids: string[]): Promise<void>;\n}\n"]}