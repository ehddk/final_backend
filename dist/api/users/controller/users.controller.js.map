{"version":3,"file":"users.controller.js","sourceRoot":"","sources":["../../../../src/api/users/controller/users.controller.ts"],"names":[],"mappings":"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","sourcesContent":["// [유저]\n// 회원가입 - signUp\n// 내 정보 조회 - getMyInfo\n\nimport { NextFunction, Request, Response } from \"express\";\nimport { UserService } from \"@/api/users/service/users.service.type\";\nimport { CryptoService } from \"@/api/common/services/crypto.service\";\n\nexport default class UsersController {\n  constructor(private _userService: UserService) {\n    this.signUp = this.signUp.bind(this);\n    this.getMyInfo = this.getMyInfo.bind(this);\n    this.updateMyInfo = this.updateMyInfo.bind(this);\n    this.logout=this.logout.bind(this)\n  }\n\n  /** 회원가입 (사용자페이지) */\n  async signUp(req: Request, res: Response, next: NextFunction) {\n    try {\n      const { password } = req.body;\n\n      const { hashedPassword, salt } = CryptoService.encryptPassword(password);\n\n      const user = await this._userService.createUser({\n        loginId: req.body.loginId,\n        password: hashedPassword,\n        email: req.body.email,\n        salt,\n        profile: {\n          phoneNum: req.body.profile.phoneNum,\n          firstName: req.body.profile.firstName,\n        },\n      });\n      res.status(200).json({\n        message: \"회원 생성 성공\",\n        data: user,\n      });\n    } catch (error) {\n      // console.log(error);\n      // next(error);\n      res.status(409).json({ message: \"회원 생성 실패\" });\n    }\n  }\n\n  /** 내 정보 조회 (사용자페이지) */\n  async getMyInfo(\n    req: Request<\n      getMyInfoRequest[\"path\"],\n      getMyInfoResponse,\n      getMyInfoRequest[\"body\"],\n      getMyInfoRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    try {\n      const { userId } = req.params;\n\n      const user = await this._userService.getUser(userId);\n\n      // console.log(\"회원 상세 조회 완료\")\n\n      // res.status(200).send(user);\n      res.status(200).json({\n        message: \"회원 조회 성공\",\n        data: user,\n      });\n    } catch (error) {\n      // next(error);\n      res.status(404).json({ message: \"회원 조회 실패\" });\n    }\n  }\n\n  /** 내 정보 수정 (사용자 페이지) */\n  async updateMyInfo(\n    req: Request<\n      updateMyInfoRequest[\"path\"],\n      updateMyInfoResponse,\n      updateMyInfoRequest[\"body\"],\n      updateMyInfoRequest[\"params\"]\n    >,\n      res: Response,\n      next: NextFunction) {\n    try {\n      // const { userId } = req.user;\n\n      // const user = await this._userService.updateUser(userId, {\n      //   profile: {\n      //     ...req.body.profile,\n      //   },\n      // });\n\n      // console.log(req.user);\n      // console.log(\"회원 수정 완료\");\n\n      // res.send(user);\n      const user = await this._userService.updateUser(req.params.userId, req.body);\n\n      // console.log(\"회원 수정 완료\")\n\n      // res.status(200).send(user);\n      res.status(200).json({\n        message: \"회원 수정 성공\",\n        data: user,\n      });\n    } catch (error) {\n      // next(error);\n      res.status(409).json({ message: \"회원 수정 실패\" });\n    }\n  }\n  /**로그아웃 */\n  async logout(req:Request<\n      logoutRequest[\"path\"],\n      logoutResponse,\n      logoutRequest[\"params\"],\n      logoutRequest[\"body\"]\n      >,\n      res:Response,\n      next:NextFunction){\n        try{\n          res.clearCookie('accessToken',{path:'/'})\n          res.status(200).send('로그아웃 성공')\n         // res.redirect('/')\n        }catch(error){\n          next(error)\n        }\n      }\n}\n"]}