{"version":3,"file":"orderItems.controller.js","sourceRoot":"","sources":["../../../../src/api/orderItems/controller/orderItems.controller.ts"],"names":[],"mappings":";AAAA,6DAA6D;AAC7D,wFAAwF;AAExF,8CAA8C;AAC9C,4DAA4D;AAC5D,yDAAyD;AACzD,oDAAoD;AAEpD,0DAA0D;AAC1D,8DAA8D;AAC9D,8DAA8D;AAC9D,8DAA8D;AAC9D,MAAM;AAEN,uBAAuB;AACvB,yBAAyB;AACzB,oBAAoB;AACpB,sCAAsC;AACtC,+BAA+B;AAC/B,sCAAsC;AACtC,uCAAuC;AACvC,SAAS;AACT,qBAAqB;AACrB,yBAAyB;AACzB,QAAQ;AACR,YAAY;AACZ,0EAA0E;AAC1E,8BAA8B;AAC9B,wBAAwB;AACxB,qBAAqB;AACrB,QAAQ;AACR,MAAM;AAEN,oBAAoB;AACpB,2BAA2B;AAC3B,oBAAoB;AACpB,wCAAwC;AACxC,iCAAiC;AACjC,wCAAwC;AACxC,yCAAyC;AACzC,SAAS;AACT,qBAAqB;AACrB,yBAAyB;AACzB,QAAQ;AACR,yDAAyD;AACzD,kBAAkB;AAElB,iDAAiD;AACjD,YAAY;AACZ,gFAAgF;AAChF,2BAA2B;AAC3B,YAAY;AACZ,sBAAsB;AACtB,sBAAsB;AACtB,wBAAwB;AACxB,6BAA6B;AAC7B,qBAAqB;AACrB,YAAY;AACZ,WAAW;AAEX,oCAAoC;AACpC,wBAAwB;AACxB,8BAA8B;AAC9B,qBAAqB;AACrB,QAAQ;AACR,MAAM;AAEN,oBAAoB;AACpB,2BAA2B;AAC3B,oBAAoB;AACpB,wCAAwC;AACxC,iCAAiC;AACjC,wCAAwC;AACxC,yCAAyC;AACzC,SAAS;AACT,qBAAqB;AACrB,yBAAyB;AACzB,QAAQ;AACR,0CAA0C;AAC1C,YAAY;AACZ,yEAAyE;AACzE,uBAAuB;AACvB,mBAAmB;AACnB,WAAW;AAEX,6BAA6B;AAC7B,wBAAwB;AACxB,qBAAqB;AACrB,QAAQ;AACR,MAAM;AAEN,oBAAoB;AACpB,2BAA2B;AAC3B,oBAAoB;AACpB,wCAAwC;AACxC,iCAAiC;AACjC,wCAAwC;AACxC,yCAAyC;AACzC,SAAS;AACT,qBAAqB;AACrB,yBAAyB;AACzB,QAAQ;AACR,0CAA0C;AAE1C,YAAY;AACZ,oEAAoE;AAEpE,2BAA2B;AAC3B,wBAAwB;AACxB,qBAAqB;AACrB,QAAQ;AACR,MAAM;AACN,IAAI","sourcesContent":["// import { NextFunction, Request, Response } from \"express\";\n// import { OrderItemsService } from \"@/api/orderItems/service/orderItems.service.type\";\n\n// export default class OrderItemsController {\n//   private readonly _orderItemsService: OrderItemsService;\n//   constructor(_orderItemsService: OrderItemsService) {\n//     this._orderItemsService = _orderItemsService;\n\n//     this.getOrderItems = this.getOrderItems.bind(this);\n//     this.createOrderItem = this.createOrderItem.bind(this);\n//     this.updateOrderItem = this.updateOrderItem.bind(this);\n//     this.deleteOrderItem = this.deleteOrderItem.bind(this);\n//   }\n\n//   /** 주문 상품 목록 조회 */\n//   async getOrderItems(\n//     req: Request<\n//       getOrderItemsRequest[\"path\"],\n//       getOrderItemsResponse,\n//       getOrderItemsRequest[\"body\"],\n//       getOrderItemsRequest[\"params\"]\n//     >,\n//     res: Response,\n//     next: NextFunction\n//   ) {\n//     try {\n//       const orderItems = await this._orderItemsService.getOrderItems();\n//       res.send(orderItems);\n//     } catch (error) {\n//       next(error);\n//     }\n//   }\n\n//   /** 주문 상품 작성 */\n//   async createOrderItem(\n//     req: Request<\n//       createOrderItemRequest[\"path\"],\n//       createOrderItemResponse,\n//       createOrderItemRequest[\"body\"],\n//       createOrderItemRequest[\"params\"]\n//     >,\n//     res: Response,\n//     next: NextFunction\n//   ) {\n//     const { product, quantity, totalPrice, orderId } =\n//       req.body;\n\n//     const orderItemStatus = \"PAYMENT_PENDING\";\n//     try {\n//       const createdOrderItem = await this._orderItemsService.createOrderItem(\n//         req.user.userId,\n//         {\n//           product, \n//           quantity,\n//           totalPrice,\n//           orderItemStatus,\n//           orderId,\n//         }\n//       );\n\n//       res.send(createdOrderItem);\n//     } catch (error) {\n//       console.error(error);\n//       next(error);\n//     }\n//   }\n\n//   /** 주문 상품 수정 */\n//   async updateOrderItem(\n//     req: Request<\n//       updateOrderItemRequest[\"path\"],\n//       updateOrderItemResponse,\n//       updateOrderItemRequest[\"body\"],\n//       updateOrderItemRequest[\"params\"]\n//     >,\n//     res: Response,\n//     next: NextFunction\n//   ) {\n//     const { orderItemId } = req.params;\n//     try {\n//       const orderItem = await this._orderItemsService.updateOrderItem(\n//         orderItemId,\n//         req.body\n//       );\n\n//       res.send(orderItem);\n//     } catch (error) {\n//       next(error);\n//     }\n//   }\n\n//   /** 주문 상품 삭제 */\n//   async deleteOrderItem(\n//     req: Request<\n//       deleteOrderItemRequest[\"path\"],\n//       deleteOrderItemResponse,\n//       deleteOrderItemRequest[\"body\"],\n//       deleteOrderItemRequest[\"params\"]\n//     >,\n//     res: Response,\n//     next: NextFunction\n//   ) {\n//     const { orderItemId } = req.params;\n\n//     try {\n//       await this._orderItemsService.deleteOrderItem(orderItemId);\n\n//       res.send(\"삭제 성공\");\n//     } catch (error) {\n//       next(error);\n//     }\n//   }\n// }\n"]}