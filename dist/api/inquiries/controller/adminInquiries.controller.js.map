{"version":3,"file":"adminInquiries.controller.js","sourceRoot":"","sources":["../../../../src/api/inquiries/controller/adminInquiries.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\nimport { InquiriesService } from \"@/api/inquiries/service/inquiries.service.type\";\n\nexport default class AdminInquiriesController {\n  private readonly _inquiriesService: InquiriesService;\n  constructor(_inquiriesService: InquiriesService) {\n    this._inquiriesService = _inquiriesService;\n\n    this.getInquiries = this.getInquiries.bind(this);\n    this.getInquiryDetail = this.getInquiryDetail.bind(this);\n    this.createInquiry = this.createInquiry.bind(this);\n    this.updateInquiry = this.updateInquiry.bind(this);\n    this.deleteInquiry = this.deleteInquiry.bind(this);\n  }\n\n  async getInquiries(\n    req: Request<\n      adminGetInquiriesRequest[\"path\"],\n      adminGetInquiriesResponse,\n      adminGetInquiriesRequest[\"body\"],\n      adminGetInquiriesRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    try {\n      const inquiries = await this._inquiriesService.getInquiries({\n        limit: req.query.limit,\n        offset: req.query.offset,\n      });\n      res.send(inquiries);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getInquiryDetail(\n    req: Request<\n      adminGetInquiryDetailRequest[\"path\"],\n      adminGetInquiryDetailResponse,\n      adminGetInquiryDetailRequest[\"body\"],\n      adminGetInquiryDetailRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    try {\n      const inquiryDetail = await this._inquiriesService.getInquiryDetail(\n        req.params.inquiryId\n      );\n\n      res.send(inquiryDetail);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async createInquiry(\n    req: Request<\n      adminCreateInquiryRequest[\"path\"],\n      adminCreateInquiryResponse,\n      adminCreateInquiryRequest[\"body\"],\n      adminCreateInquiryRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    const status = \"Processing\";\n    const { inquiryType, title, content } = req.body;\n\n    try {\n      const createdInquiry = await this._inquiriesService.createInquiry(req.user.userId, {\n        inquiryType,\n        title,\n        content,\n        status,\n      });\n      res.send(createdInquiry);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async updateInquiry(\n    req: Request<\n      adminUpdateInquiryRequest[\"path\"],\n      adminUpdateInquiryResponse,\n      adminUpdateInquiryRequest[\"body\"],\n      adminUpdateInquiryRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    const { inquiryId } = req.params;\n\n    try {\n      await this._inquiriesService.updateInquiry(inquiryId, req.body);\n\n      res.status(204).json();\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async deleteInquiry(\n    req: Request<\n      adminDeleteInquiryRequest[\"path\"],\n      adminDeleteInquiryResponse,\n      adminDeleteInquiryRequest[\"body\"],\n      adminDeleteInquiryRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    const { inquiryId } = req.params;\n    try {\n      await this._inquiriesService.deleteInquiry(inquiryId);\n      res.status(204).json();\n    } catch (error) {\n      next(error);\n    }\n  }\n}\n"]}