{"version":3,"file":"inquiries.controller.js","sourceRoot":"","sources":["../../../../src/api/inquiries/controller/inquiries.controller.ts"],"names":[],"mappings":";;AAIA,MAAqB,mBAAmB;IAErB,iBAAiB,CAAmB;IACrD,YAAY,iBAAmC;QAC7C,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAE3C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,kBAAkB;IAClB,KAAK,CAAC,YAAY,CAChB,GAKC,EACD,GAAa,EACb,IAAkB;QAElB,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC;QAEpC,IAAI,CAAC;YACH,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC;gBAC1D,KAAK;gBACL,MAAM;aACP,CAAC,CAAC;YAEH,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACtB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,CAAC;QACd,CAAC;IACH,CAAC;IAED,kBAAkB;IAClB,KAAK,CAAC,gBAAgB,CACpB,GAKC,EACD,GAAa,EACb,IAAkB;QAElB,MAAM,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YAEzE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,CAAC;QACd,CAAC;IACH,CAAC;IAED,eAAe;IACf,KAAK,CAAC,aAAa,CACjB,GAKC,EACD,GAAa,EACb,IAAkB;QAElB,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QACjD,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE;gBAC1E,WAAW;gBACX,KAAK;gBACL,OAAO;gBACP,MAAM;aACP,CAAC,CAAC;YAEH,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,IAAI,CAAC,KAAK,CAAC,CAAC;QACd,CAAC;IACH,CAAC;CAEF;AArFD,sCAqFC","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\nimport { InquiriesService } from \"@/api/inquiries/service/inquiries.service.type\";\n\n\nexport default class InquiriesController {\n\n  private readonly _inquiriesService: InquiriesService;\n  constructor(_inquiriesService: InquiriesService) {\n    this._inquiriesService = _inquiriesService;\n\n    this.getInquiries = this.getInquiries.bind(this);\n    this.getInquiryDetail = this.getInquiryDetail.bind(this);\n    this.createInquiry = this.createInquiry.bind(this);\n  }\n\n  /** 1:1문의 목록 조회 */\n  async getInquiries(\n    req: Request<\n      getInquiriesRequest[\"path\"],\n      getInquiriesResponse,\n      getInquiriesRequest[\"body\"],\n      getInquiriesRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    const { limit, offset } = req.query;\n\n    try {\n      const inquiries = await this._inquiriesService.getInquiries({\n        limit,\n        offset,\n      });\n\n      res.send(inquiries);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 1:1문의 상세 조회 */\n  async getInquiryDetail(\n    req: Request<\n      getInquiryDetailRequest[\"path\"],\n      getInquiryDetailResponse,\n      getInquiryDetailRequest[\"body\"],\n      getInquiryDetailRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    const { inquiryId } = req.params;\n    try {\n      const inquiry = await this._inquiriesService.getInquiryDetail(inquiryId);\n\n      res.send(inquiry);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 1:1문의 작성 */\n  async createInquiry(\n    req: Request<\n      createInquiryRequest[\"path\"],\n      createInquiryResponse,\n      createInquiryRequest[\"body\"],\n      createInquiryRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    const status = \"Processing\";\n    const { inquiryType, title, content } = req.body;\n    try {\n      const inquiry = await this._inquiriesService.createInquiry(req.user.userId, {\n        inquiryType,\n        title,\n        content,\n        status,\n      });\n\n      res.send(inquiry);\n    } catch (error) {\n      console.error(error);\n      next(error);\n    }\n  }\n\n}\n"]}