{"version":3,"file":"products.service.js","sourceRoot":"","sources":["../../../../src/api/products/service/products.service.ts"],"names":[],"mappings":";;;;;;AAIA,4FAAmE;AAEnE,MAAa,mBAAmB;IACX,kBAAkB,CAAoB;IAC3D,YAAY,iBAAmC;QAC5C,IAAI,CAAC,kBAAkB,GAAC,iBAAiB,CAAC;IAC7C,CAAC;IACG,cAAc;IACd,KAAK,CAAC,WAAW;QACf,IAAG,CAAC;YACD,MAAM,QAAQ,GAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;YACvD,OAAO,QAAQ,CAAC;QACnB,CAAC;QAAA,OAAM,KAAK,EAAC,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;QAC5C,CAAC;IACH,CAAC;IACG,cAAc;IAClB,KAAK,CAAC,gBAAgB,CAAC,SAAgB;QACrC,IAAG,CAAC;YACD,MAAM,OAAO,GAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAChE,IAAG,CAAC,OAAO,EAAC,CAAC;gBACT,MAAM,IAAI,wBAAa,CAAC,GAAG,EAAC,mBAAmB,CAAC,CAAA;YACpD,CAAC;YACD,gEAAgE;YAChE,OAAO,OAAO,IAAI,IAAI,CAAC;QAC3B,CAAC;QAAA,OAAM,KAAK,EAAC,CAAC;YACV,MAAO,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACrC,CAAC;IACD,CAAC;CAGL;AA7BD,kDA6BC","sourcesContent":["import { IProductResponse } from \"../@types/product.type\";\nimport { ProductResponseDTO } from \"../dto/productResponse.dto\";\nimport { ProductsService } from \"./product.service.type\";\nimport { ProductRepository } from \"../repository/product.repository\";\nimport HttpException from \"../../common/exceptions/http.exception\";\n\nexport class ProductsServiceImpl implements ProductsService{\n    private readonly _productRepository: ProductRepository;\nconstructor(productRepository:ProductRepository){\n   this._productRepository=productRepository;\n}\n    /**제품 목록 조회 */\n    async getProducts():Promise<ProductResponseDTO[]>{\n      try{\n         const products=await this._productRepository.findAll();\n         return products;\n      }catch(error){\n         throw new Error('제품 목록 조회 중 오류가 발생했습니다.')\n      }\n    }\n        /**제품 상세 조회 */\n    async getProductDetail(productId:string):Promise<ProductResponseDTO | null>{\n      try{\n         const product=await this._productRepository.findById(productId);\n         if(!product){\n             throw new HttpException(404,\"해당 제품을 찾을 수 없습니다.\")\n         }\n         //const product=this.products.find(item=>item.id === productId);\n         return product || null;\n     }catch(error){\n         throw  new Error(`해당 제품이 없습니다.`);\n     }\n     }\n  \n\n}"]}