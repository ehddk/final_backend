{"version":3,"file":"adminProduct.router.js","sourceRoot":"","sources":["../../../../src/api/products/router/adminProduct.router.ts"],"names":[],"mappings":";;;;;;AAAA,sDAA8B;AAC9B,oGAA0E;AAC1E,0EAAyE;AACzE,yFAAqF;AACrF,iDAAgD;AAChD,uCAAyC;AACzC,0FAA0E;AAC1E,8EAAkL;AAErK,QAAA,kBAAkB,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEnD,gBAAgB;AAChB,MAAM,oBAAoB,GAAG;IAC3B,oBAAoB;IACpB,YAAY,EAAE,qBAAqB;IACnC,oBAAoB;IACpB,iBAAiB,EAAE,gCAAgC;IACnD,kBAAkB;IAClB,cAAc,EAAE,qBAAqB;IACrC,iBAAiB;IACjB,cAAc,EAAE,gCAAgC;IAChD,iBAAiB;IACjB,cAAc,EAAE,gCAAgC;IAChD,eAAe;IACf,YAAY,EAAE,2BAA2B;CACjC,CAAC;AAEX,MAAM,sBAAsB,GAAG,IAAI,iCAAsB,CACrD,IAAI,8CAAuB,CAAC,IAAI,sDAAyB,EAAE,CAAC,CAC/D,CAAC;AAEF,0BAAkB,CAAC,GAAG,CAClB,IAAA,uBAAW,EAAE,oBAAoB,CAAC,YAAY,EAAC,sBAAY,CAAC,kBAAkB,CAAC,EAC/E,sBAAsB,CAAC,WAAW,CACrC,CAAA;AACD,0BAAkB,CAAC,GAAG,CAClB,IAAA,uBAAW,EAAE,oBAAoB,CAAC,iBAAiB,EAAC,sBAAY,CAAC,kBAAkB,CAAC,EACpF,IAAA,gCAAQ,EAAC,mDAA8B,CAAC,EACxC,CAAC,GAAG,EAAC,GAAG,EAAC,IAAI,EAAC,EAAE;IACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IACjB,IAAI,EAAE,CAAA;AACV,CAAC,EACD,sBAAsB,CAAC,gBAAgB,CAC1C,CAAA;AACD,0BAAkB,CAAC,IAAI,CACnB,IAAA,uBAAW,EAAC,oBAAoB,CAAC,cAAc,EAAC,sBAAY,CAAC,kBAAkB,CAAC,EAChF,IAAA,gCAAQ,EAAC,EAAC,IAAI,EAAC,oDAA+B,EAAC,CAAC,EAChD,sBAAsB,CAAC,aAAa,CACvC,CAAA;AAED,0BAAkB,CAAC,MAAM,CACrB,IAAA,uBAAW,EAAC,oBAAoB,CAAC,cAAc,EAAC,sBAAY,CAAC,kBAAkB,CAAC,EACjF,IAAA,gCAAQ,EAAC,gDAA2B,CAAC,EACpC,sBAAsB,CAAC,aAAa,CACvC,CAAA;AACD,0BAAkB,CAAC,GAAG,CAClB,IAAA,uBAAW,EAAC,oBAAoB,CAAC,cAAc,EAAC,sBAAY,CAAC,kBAAkB,CAAC,EAChF,IAAA,gCAAQ,EAAC,gDAA2B,CAAC,EACrC,sBAAsB,CAAC,aAAa,CACvC,CAAA","sourcesContent":["import express from \"express\";\nimport AdminProductController from \"../controller/adminProduct.controller\"\nimport { AdminProductServiceImpl } from \"../service/adminProduct.service\"\nimport { MongooseProductRepository } from \"../repository/mongooseProduct.repository\";\nimport { extractPath } from \"@/utils/path.util\";\nimport { ROUTES_INDEX } from \"@/routers\";\nimport { validate } from \"@/api/common/middlewares/validation.middleware\";\nimport { adminCreateProductBodyValidator, adminDeleteProductValidator, adminGetProductDetailValidator, adminUpdateProductValidator } from \"../dto/validations/product.validation\";\n\nexport const adminProductRouter = express.Router();\n\n/*제품 관련 API 객체*/\nconst ADMIN_PRODUCT_ROUTES = {\n  /**제품 목록 조회 (관리자) */\n  GET_PRODUCTS: `/admin-api/products`,\n  /**제품 상세 조회 (관리자) */\n  GET_PRODUCTDETAIL: `/admin-api/products/:productId`,\n  /**제품 생성 (관리자)  */\n  CREATE_PRODUCT: `/admin-api/products`,\n  /**제품 수정 (관리자) */\n  UPDATE_PRODUCT: `/admin-api/products/:productId`,\n  /**제품 삭제 (관리자) */\n  DELETE_PRODUCT: `/admin-api/products/:productId`,\n  /** 더미데이터 생성 */\n  CREATE_DUMMY: `/admin-api/products/dummy`,\n} as const;\n\nconst adminProductController = new AdminProductController(\n    new AdminProductServiceImpl(new MongooseProductRepository())\n);\n\nadminProductRouter.get(\n    extractPath( ADMIN_PRODUCT_ROUTES.GET_PRODUCTS,ROUTES_INDEX.ADMIN_PRODUCTS_API),\n    adminProductController.getProducts\n)\nadminProductRouter.get(\n    extractPath( ADMIN_PRODUCT_ROUTES.GET_PRODUCTDETAIL,ROUTES_INDEX.ADMIN_PRODUCTS_API),\n    validate(adminGetProductDetailValidator),\n    (req,res,next)=>{\n        console.log('dd')\n        next()\n    },\n    adminProductController.getProductDetail\n)\nadminProductRouter.post(\n    extractPath(ADMIN_PRODUCT_ROUTES.CREATE_PRODUCT,ROUTES_INDEX.ADMIN_PRODUCTS_API),\n    validate({body:adminCreateProductBodyValidator}),\n    adminProductController.createProduct\n)\n\nadminProductRouter.delete(\n    extractPath(ADMIN_PRODUCT_ROUTES.DELETE_PRODUCT,ROUTES_INDEX.ADMIN_PRODUCTS_API),\n   validate(adminDeleteProductValidator),\n    adminProductController.deleteProduct\n)\nadminProductRouter.put(\n    extractPath(ADMIN_PRODUCT_ROUTES.UPDATE_PRODUCT,ROUTES_INDEX.ADMIN_PRODUCTS_API),\n    validate(adminUpdateProductValidator),\n    adminProductController.updateProduct\n)"]}