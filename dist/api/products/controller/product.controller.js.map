{"version":3,"file":"product.controller.js","sourceRoot":"","sources":["../../../../src/api/products/controller/product.controller.ts"],"names":[],"mappings":";;AAIA,MAAqB,iBAAiB;IACjB,gBAAgB,CAAkB;IACnD,YAAY,gBAAiC;QACzC,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QAEzC,IAAI,CAAC,WAAW,GAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3D,CAAC;IACE,cAAc;IAClB,KAAK,CAAC,WAAW,CACZ,GAGmB,EACnB,GAAY,EACZ,IAAiB;QAErB,IAAG,CAAC;YACA,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;YAC3D,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACpB,oBAAoB;QACvB,CAAC;QAAA,OAAM,KAAK,EAAC,CAAC;YACV,IAAI,CAAC,KAAK,CAAC,CAAA;QACf,CAAC;IACF,CAAC;IACD,cAAc;IAGd,KAAK,CAAC,gBAAgB,CACrB,GAAgG,EAC/F,GAAa,EACd,IAAkB;QAElB,IAAI,CAAC;YACD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;YAC/E,8DAA8D;YAElE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,KAAK,CAAC,CAAC;QAChB,CAAC;IACL,CAAC;CACA;AA1CD,oCA0CC","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\nimport { ProductsService } from \"../service/product.service.type\"\n\n\nexport default class ProductController{\n    private readonly _productsService: ProductsService;\n    constructor(_productsService: ProductsService){\n        this._productsService = _productsService;\n\n        this.getProducts= this.getProducts.bind(this);\n        this.getProductDetail=this.getProductDetail.bind(this);\n    }\n       /**제품 목록 조회 */\n   async getProducts(\n        req:Request<getProductRequest[\"path\"],\n        getProductRequest[\"body\"],\n        getProductRequest[\"params\"],\n        getProductResponse>,\n        res:Response,\n        next:NextFunction\n   ){\n    try{\n        const products = await this._productsService.getProducts();\n        res.send(products);\n       // res.send('목록 조회')\n    }catch(error){\n        next(error)\n    }\n   }\n   /**제품 상세 조회 */\n  \n\n   async getProductDetail(\n    req: Request<getProductDetailRequestPath, getProductDetailResponse, getProductDetailRequestBody>,\n     res: Response,\n    next: NextFunction\n) {\n    try {\n        const product = await this._productsService.getProductDetail(req.params.productId)\n           // req.params.productId // productId가 params에서 올바르게 가져와지도록 수정됨\n      \n       res.send(product);\n    } catch (error) {\n        next(error);\n    }\n}\n}"]}