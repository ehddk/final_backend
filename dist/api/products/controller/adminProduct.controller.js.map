{"version":3,"file":"adminProduct.controller.js","sourceRoot":"","sources":["../../../../src/api/products/controller/adminProduct.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\nimport { AdminProductService } from \"../service/adminProduct.service.type\"\n\nexport default class AdminProductController{\n    private readonly _adminProductService:AdminProductService;\n    constructor(_adminProductService:AdminProductService){\n        this._adminProductService = _adminProductService;\n\n        this.getProducts=this.getProducts.bind(this);\n        this.getProductDetail=this.getProductDetail.bind(this);\n        this.createProduct=this.createProduct.bind(this);\n        this.updateProduct=this.updateProduct.bind(this);\n        this.deleteProduct=this.deleteProduct.bind(this);\n\n    }\n    async getProducts(req:Request<\n            adminGetProductsRequest[\"path\"],\n            adminGetProductsResponse,\n            adminGetProductsRequest[\"body\"],\n            adminGetProductsRequest[\"params\"]\n        >,\n        res:Response,next:NextFunction){\n    try{\n        const products= await this._adminProductService.getProducts()\n        console.log('rpdi',products)\n        res.send(products)\n        // res.send('관리자 제품 목록 조회')\n    }catch(error){\n        next(error)\n    }\n    }      \n    async getProductDetail(req:Request,res:Response,next:NextFunction){\n        try{\n           const product= await this._adminProductService.getProductDetail(req.params.productId)\n           console.log('productdetail',product)\n           res.send(product)\n        }catch(error){\n            next(error)\n        }\n    \n    }\n    async createProduct(req:Request<\n            adminCreateProductRequest[\"path\"],\n            adminCreateProductResponse,\n            adminCreateProductRequest[\"body\"],\n            adminCreateProductRequest[\"params\"]\n        >,res:Response,\n        next:NextFunction){\n            const {productName,price,sales,thumbnail,img,delivery,description,seller,packageType,detail,rdate,category}=req.body;\n        try{\n            const product=await this._adminProductService.createProduct({\n                productName,\n                price,\n                sales,\n                thumbnail,\n                img,\n                delivery,\n                seller,\n                description,\n                packageType,\n                detail,\n                rdate,\n                category\n            })\n            \n            res.send(product)\n           // console.log('dpro',product)\n        }catch(error){\n            next(error)\n        }\n    \n    }\n    async updateProduct(req:Request<\n        adminUpdateProductRequest[\"path\"],\n        adminUpdateProductResponse,\n        adminUpdateProductRequest[\"body\"],\n        adminUpdateProductRequest[\"params\"]>,\n        res:Response,next:NextFunction){\n            const {productId}= req.params;\n        try{\n           await this._adminProductService.updateProduct(productId,req.body);\n         res.send('수정 성공')\n        }catch(error){\n            next(error)\n        }\n    \n    }\n    async deleteProduct(req:Request<\n            adminDeleteProductRequest[\"path\"],\n            adminDeleteProductResponse,\n            adminDeleteProductRequest[\"body\"],\n            adminDeleteProductRequest[\"params\"]\n        >,res:Response,next:NextFunction){\n        const {productId}=req.params;\n        try{\n            await this._adminProductService.deleteProduct(productId);\n            res.send(\"삭제 성공\")\n        }catch(error){\n            next(error)\n        }\n    \n    }\n}"]}