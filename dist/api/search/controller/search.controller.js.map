{"version":3,"file":"search.controller.js","sourceRoot":"","sources":["../../../../src/api/search/controller/search.controller.ts"],"names":[],"mappings":";;;AAIA,MAAa,gBAAgB;IAEL;IAApB,YAAoB,cAA4B;QAA5B,mBAAc,GAAd,cAAc,CAAc;QAC5C,IAAI,CAAC,cAAc,GAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IACvD,CAAC;IACD,KAAK,CAAC,cAAc,CAAC,GAAW,EAAC,GAAY,EAAC,IAAiB;QAC3D,IAAG,CAAC;YACA,MAAM,OAAO,GAAE,GAAG,CAAC,KAAK,CAAC,OAAiB,CAAC;YAC3C,MAAM,OAAO,GAAC,MAAM,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;YACzE,OAAO,OAAO,CAAC;QACnB,CAAC;QACD,OAAM,KAAK,EAAC,CAAC;YACT,IAAI,CAAC,KAAK,CAAC,CAAC;QAChB,CAAC;IACL,CAAC;CACJ;AAfD,4CAeC","sourcesContent":["import { NextFunction,Request, Response} from \"express\";\nimport { SearchService } from \"../service/search.service\";\n\n\nexport class SearchController{\n    \n    constructor(private _searchService:SearchService){\n        this.searchProducts= this.searchProducts.bind(this)\n    }\n    async searchProducts(req:Request,res:Response,next:NextFunction){\n        try{\n            const keyword= req.query.keyword as string;\n            const results=await this._searchService.searchProductsByKeyword(keyword);\n            return results;\n        }\n        catch(error){\n            next(error);\n        }\n    }\n}"]}