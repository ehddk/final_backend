{"version":3,"file":"orders.router.js","sourceRoot":"","sources":["../../../../src/api/orders/router/orders.router.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAE9B,oFAGuD;AACvD,0FAA0E;AAE1E,iDAAgD;AAChD,uCAAyC;AACzC,sFAAkF;AAClF,kGAAyE;AACzE,wEAAwE;AACxE,+FAA2F;AAC3F,iGAA6F;AAC7F,6FAAyF;AAEzF,MAAM,WAAW,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAErC,MAAM,YAAY,GAAG;IACnB,eAAe;IACf,UAAU,EAAE,aAAa;IACzB,eAAe;IACf,SAAS,EAAE,sBAAsB;IACjC,YAAY;IACZ,YAAY,EAAE,aAAa;IAC3B,YAAY;IACZ,YAAY,EAAE,sBAAsB;CAE5B,CAAC;AAEX,MAAM,gBAAgB,GAAG,IAAI,2BAAgB,CAC3C,IAAI,kCAAiB,CACnB,IAAI,kDAAuB,EAAE,EAC7B,IAAI,gDAAsB,EAAE,EAC5B,IAAI,0DAA2B,EAAE,CAClC,CACF,CAAC;AAEF,WAAW,CAAC,GAAG,CACb,IAAA,uBAAW,EAAC,YAAY,CAAC,UAAU,EAAE,sBAAY,CAAC,UAAU,CAAC,EAC7D,IAAA,gCAAQ,EAAC,qCAAkB,CAAC,EAC5B,wCAAkB,EAClB,gBAAgB,CAAC,SAAS,CAC3B,CAAC;AACF,WAAW,CAAC,GAAG,CACb,IAAA,uBAAW,EAAC,YAAY,CAAC,SAAS,EAAE,sBAAY,CAAC,UAAU,CAAC,EAC5D,IAAA,gCAAQ,EAAC,0CAAuB,CAAC,EACjC,wCAAkB,EAClB,gBAAgB,CAAC,cAAc,CAChC,CAAC;AACF,WAAW,CAAC,IAAI,CACd,IAAA,uBAAW,EAAC,YAAY,CAAC,YAAY,EAAE,sBAAY,CAAC,UAAU,CAAC,EAC/D,wCAAkB,EAClB,gBAAgB,CAAC,WAAW,CAC7B,CAAC;AAEF,WAAW,CAAC,GAAG,CACb,IAAA,uBAAW,EAAC,YAAY,CAAC,YAAY,EAAE,sBAAY,CAAC,UAAU,CAAC,EAC/D,wCAAkB,EAClB,gBAAgB,CAAC,WAAW,CAC7B,CAAC;AAEF,kBAAe,WAAW,CAAC","sourcesContent":["import express from \"express\";\n\nimport {\n  getOrderDetailValidator,\n  getOrdersValidator,\n} from \"@/api/orders/dto/validations/order.validation\";\nimport { validate } from \"@/api/common/middlewares/validation.middleware\";\n\nimport { extractPath } from \"@/utils/path.util\";\nimport { ROUTES_INDEX } from \"@/routers\";\nimport { authUserMiddleware } from \"@/api/common/middlewares/authUser.middleware\";\nimport OrdersController from \"@/api/orders/controller/orders.controller\";\nimport { OrdersServiceImpl } from \"@/api/orders/service/orders.service\";\nimport { MongooseOrderRepository } from \"@/api/orders/repository/mongooseOrder.repository\";\nimport { MongooseUserRepository } from \"@/api/users/repository/user/mongooseUser.repository\";\nimport { MongooseOrderItemRepository } from \"../repository/mongooseOrderItem.repository\";\n\nconst orderRouter = express.Router();\n\nconst ORDER_ROUTES = {\n  /** 주문 목록 조회 */\n  GET_ORDERS: `/api/orders`,\n  /** 주문 상세 조회 */\n  GET_ORDER: `/api/orders/:orderId`,\n  /** 주문 생성 */\n  CREATE_ORDER: `/api/orders`,\n  /** 주문 수정 */\n  UPDATE_ORDER: `/api/orders/:orderId`,\n\n} as const;\n\nconst ordersController = new OrdersController(\n  new OrdersServiceImpl(\n    new MongooseOrderRepository(),\n    new MongooseUserRepository(),\n    new MongooseOrderItemRepository()\n  )\n);\n\norderRouter.get(\n  extractPath(ORDER_ROUTES.GET_ORDERS, ROUTES_INDEX.ORDERS_API),\n  validate(getOrdersValidator),\n  authUserMiddleware,\n  ordersController.getOrders\n);\norderRouter.get(\n  extractPath(ORDER_ROUTES.GET_ORDER, ROUTES_INDEX.ORDERS_API),\n  validate(getOrderDetailValidator),\n  authUserMiddleware,\n  ordersController.getOrderDetail\n);\norderRouter.post(\n  extractPath(ORDER_ROUTES.CREATE_ORDER, ROUTES_INDEX.ORDERS_API),\n  authUserMiddleware,\n  ordersController.createOrder\n);\n\norderRouter.put(\n  extractPath(ORDER_ROUTES.UPDATE_ORDER, ROUTES_INDEX.ORDERS_API),\n  authUserMiddleware,\n  ordersController.updateOrder\n);\n\nexport default orderRouter;\n"]}