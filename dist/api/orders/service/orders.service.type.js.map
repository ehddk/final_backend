{"version":3,"file":"orders.service.type.js","sourceRoot":"","sources":["../../../../src/api/orders/service/orders.service.type.ts"],"names":[],"mappings":"","sourcesContent":["import { OrderResponseDTO } from \"@/api/orders/dto/orderResponse.dto\";\n\nexport interface OrdersService {\n  /** 주문 생성 */\n  createOrder(\n    userId: string,\n    order: Omit<\n      IOrder,\n      \"id\" | \"userId\" | \"userInfo\" | \"createdAt\" | \"orderItem\"\n    > & {\n      orderItem: Omit<IOrderItem, \"id\">[];\n    }\n  ): Promise<OrderResponseDTO>;\n  /** 주문 목록 조회 */\n  getOrders({ userId, limit, offset }: { userId: string; limit?: number; offset?: number }): Promise<{\n    totalCount: number;\n    prev: string | null;\n    results: OrderResponseDTO[];\n    next: string | null;\n  }>;\n  /** 주문 조회 */\n  getOrderDetail(id: string): Promise<OrderResponseDTO | null>;\n  /** 주문 수정 */\n  updateOrder(\n    orderId: string,\n    params: Partial<\n      Pick<IOrder, \"deliveryRequest\" | \"orderStatus\"> & {\n        orderItem: Omit<IOrderItem, \"id\">[];\n      }\n    >\n  ): Promise<void>;\n  /** 주문 삭제 */\n  deleteOrder(orderId: string): Promise<void>;\n}\n"]}