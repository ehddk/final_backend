{"version":3,"file":"order.schema.js","sourceRoot":"","sources":["../../../../src/api/orders/model/order.schema.ts"],"names":[],"mappings":";;;;;;AAAA,kEAA0C;AAE1C,MAAM,WAAW,GAAG,IAAI,kBAAQ,CAAC,MAAM,CACrC;IACE,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;KACb;IAED,QAAQ,EAAE;QACR,IAAI,EAAE,kBAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,GAAG,EAAE,SAAS;QACd,QAAQ,EAAE,IAAI;KACf;IAED,eAAe,EAAE;QACf,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,eAAe,EAAE;QACf,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,KAAK;KAChB;IACD,aAAa,EAAE;QACb,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,aAAa,EAAE,YAAY,EAAE,gBAAgB,EAAE,WAAW,CAAC;QAClE,QAAQ,EAAE,IAAI;KACf;IACD,SAAS,EAAE;QACT;YACE,IAAI,EAAE,kBAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,GAAG,EAAE,WAAW;YAChB,QAAQ,EAAE,IAAI;SACf;KACF;IACD,iBAAiB,EAAE;QACjB,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,WAAW,EAAE;QACX,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,kBAAkB,EAAE;QAClB,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,WAAW,EAAE;QACX,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE;YACJ,iBAAiB;YACjB,mBAAmB;YACnB,wBAAwB;YACxB,UAAU;YACV,SAAS;YACT,gBAAgB;YAChB,0BAA0B;YAC1B,uBAAuB;YACvB,kBAAkB;YAClB,eAAe;YACf,4BAA4B;YAC5B,mBAAmB;YACnB,yBAAyB;YACzB,gBAAgB;SACjB;QACD,QAAQ,EAAE,IAAI;KACf;CACF,EACD;IACE,UAAU,EAAE;QACV,SAAS,EAAE,WAAW;QACtB,SAAS,EAAE,WAAW;KACvB;CACF,CACF,CAAC;AAEF,0BAA0B;AACb,QAAA,aAAa,GAAG,kBAAQ,CAAC,KAAK,CAAS,OAAO,EAAE,WAAW,CAAC,CAAC","sourcesContent":["import mongoose from \"@/vendors/mongoose\";\n\nconst orderSchema = new mongoose.Schema<IOrder>(\n  {\n    userId: {\n      type: String,\n    },\n\n    userInfo: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Profile\",\n      required: true,\n    },\n\n    deliveryAddress: {\n      type: String,\n      required: true,\n    },\n    deliveryRequest: {\n      type: String,\n      required: false,\n    },\n    paymentMethod: {\n      type: String,\n      enum: [\"CREDIT_CARD\", \"SIMPLE_PAY\", \"MOBILE_PAYMENT\", \"KAKAO_PAY\"],\n      required: true,\n    },\n    orderItem: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"OrderItem\",\n        required: true,\n      },\n    ],\n    totalProductPrice: {\n      type: Number,\n      required: true,\n    },\n    shippingFee: {\n      type: Number,\n      required: true,\n    },\n    totalPaymentAmount: {\n      type: Number,\n      required: true,\n    },\n    orderStatus: {\n      type: String,\n      enum: [\n        \"PAYMENT_PENDING\",\n        \"PAYMENT_COMPLETED\",\n        \"PREPARING_FOR_SHIPPING\",\n        \"SHIPPING\",\n        \"SHIPPED\",\n        \"ORDER_CANCELED\",\n        \"PARTIAL_REFUND_REQUESTED\",\n        \"FULL_REFUND_REQUESTED\",\n        \"PARTIAL_REFUNDED\",\n        \"FULL_REFUNDED\",\n        \"PARTIAL_EXCHANGE_REQUESTED\",\n        \"PARTIAL_EXCHANGED\",\n        \"FULL_EXCHANGE_REQUESTED\",\n        \"FULL_EXCHANGED\",\n      ],\n      required: true,\n    },\n  },\n  {\n    timestamps: {\n      createdAt: \"createdAt\",\n      updatedAt: \"updatedAt\",\n    },\n  }\n);\n\n// Mongoose model creation\nexport const MongooseOrder = mongoose.model<IOrder>(\"Order\", orderSchema);\n"]}