{"version":3,"file":"orderResponse.dto.js","sourceRoot":"","sources":["../../../../src/api/orders/dto/orderResponse.dto.ts"],"names":[],"mappings":";;;AAAA,0BAA0B;AAC1B,MAAa,gBAAgB;IAC3B,OAAO,CAAS;IAChB,MAAM,CAAS;IACf,QAAQ,CAGN;IACF,eAAe,CAAS;IACxB,eAAe,CAAU;IACzB,SAAS,CAAO,CAAC,YAAY;IAC7B,aAAa,CAAgB;IAC7B,SAAS,CAYL;IACJ,cAAc;IACd,iBAAiB,CAAS;IAC1B,UAAU;IACV,WAAW,CAAS;IACpB,aAAa;IACb,kBAAkB,CAAS;IAC3B,WAAW,CAAc;IAEzB,+BAA+B;IAC/B,YAAY,MAAc;QACxB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,QAAQ;QAClC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG;YACd,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,SAAS;YACpC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ;SACnC,CAAC;QACF,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC,kBAAkB;QACjE,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,sBAAsB;QACzD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC,QAAQ;QACnD,CAAC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;YACjD,CAAC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;YACvC,CAAC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;YACrD,CAAC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ;QACnD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;YAC/B,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAgB,EAAE,EAAE,CAAC,CAAC;gBAC1C,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,OAAO,EAAE;oBACP,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE;oBACnB,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;oBACrC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;iBAC1B;gBACD,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,eAAe,EAAE,IAAI,CAAC,eAAe;aACtC,CAAC,CAAC;YACL,CAAC,CAAC,EAAE,CAAC;IACT,CAAC;CACF;AA9DD,4CA8DC","sourcesContent":["// OrderResponseDTO 클래스 정의\nexport class OrderResponseDTO {\n  orderId: string;\n  userId: string;\n  userInfo: {\n    firstName: string;\n    phoneNum: string;\n  };\n  deliveryAddress: string;\n  deliveryRequest?: string;\n  orderDate: Date; // createdAt\n  paymentMethod: PaymentMethod;\n  orderItem: {\n    product: {\n      id: string;\n      productName: string;\n      sales: number;\n    };\n    /** 주문 수량 */\n    quantity: number;\n    /** 주문 총 가격 */\n    totalPrice: number;\n    /** 주문 상태 (주문상품별) */\n    orderItemStatus: OrderItemStatus;\n  }[];\n  /** 총 상품 가격 */\n  totalProductPrice: number;\n  /** 배송비 */\n  shippingFee: number;\n  /** 결제예정금액 */\n  totalPaymentAmount: number;\n  orderStatus: OrderStatus;\n\n  // 생성자에서 IOrder 객체를 받아서 DTO로 변환\n  constructor(params: IOrder) {\n    this.orderId = params.id; // 주문 ID\n    this.userId = params.userId;\n    this.userInfo = {\n      firstName: params.userInfo.firstName,\n      phoneNum: params.userInfo.phoneNum,\n    };\n    this.deliveryAddress = params.deliveryAddress;\n    this.deliveryRequest = params.deliveryRequest; // 배송 요청사항 (선택 사항)\n    this.orderDate = params.createdAt; // 주문 날짜 (string으로 전달)\n    this.paymentMethod = params.paymentMethod; // 결제 수단\n    (this.totalProductPrice = params.totalProductPrice),\n      (this.shippingFee = params.shippingFee),\n      (this.totalPaymentAmount = params.totalPaymentAmount),\n      (this.orderStatus = params.orderStatus); // 주문 상태\n    this.orderItem = params.orderItem\n      ? params.orderItem.map((item: IOrderItem) => ({\n          id: item.id,\n          product: {\n            id: item.product.id,\n            productName: item.product.productName,\n            sales: item.product.sales,\n          },\n          quantity: item.quantity,\n          totalPrice: item.totalPrice,\n          orderItemStatus: item.orderItemStatus,\n        }))\n      : [];\n  }\n}\n"]}