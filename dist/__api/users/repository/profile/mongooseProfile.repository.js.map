{"version":3,"file":"mongooseProfile.repository.js","sourceRoot":"","sources":["../../../../../src/__api/users/repository/profile/mongooseProfile.repository.ts"],"names":[],"mappings":";AAAA,sEAAsE;AACtE,yFAAyF;AACzF,sEAAsE;AAEtE,wEAAwE;AACxE,mEAAmE;AACnE,uDAAuD;AAEvD,+BAA+B;AAE/B,yBAAyB;AACzB,MAAM;AACN,2CAA2C;AAC3C,2CAA2C;AAC3C,MAAM;AACN,2DAA2D;AAC3D,0DAA0D;AAC1D,sBAAsB;AACtB,MAAM;AACN,kBAAkB;AAClB,yBAAyB;AACzB,2CAA2C;AAC3C,2BAA2B;AAC3B,+DAA+D;AAC/D,mBAAmB;AACnB,0BAA0B;AAC1B,SAAS;AAET,sBAAsB;AACtB,yDAAyD;AACzD,QAAQ;AAER,sBAAsB;AACtB,MAAM;AACN,qDAAqD;AACrD,2DAA2D;AAE3D,cAAc;AACd,MAAM;AACN,IAAI","sourcesContent":["// import HttpException from \"@/api/common/exceptions/http.exception\";\n// import { ProfileRepository } from \"@/api/users/repository/profile/profile.repository\";\n// import { MongooseProfile } from \"@/api/users/model/profile.schema\";\n\n// export class MongooseProfileRepository implements ProfileRepository {\n//   async save(profile: Omit<IProfile, \"id\">): Promise<IProfile> {\n//     const newProfile = new MongooseProfile(profile);\n\n//     await newProfile.save();\n\n//     return newProfile;\n//   }\n//   async findAll(): Promise<IProfile[]> {\n//     return await MongooseProfile.find();\n//   }\n//   async findById(id: string): Promise<IProfile | null> {\n//     const profile = await MongooseProfile.findById(id);\n//     return profile;\n//   }\n//   async update(\n//     profileId: string,\n//     updateProfileInfo: Partial<IProfile>\n//   ): Promise<IProfile> {\n//     const results = await MongooseProfile.findByIdAndUpdate(\n//       profileId,\n//       updateProfileInfo\n//     );\n\n//     if (!results) {\n//       throw new HttpException(404, \"프로필을 찾을 수 없습니다.\");\n//     }\n\n//     return results;\n//   }\n//   async delete(profileId: string): Promise<void> {\n//     await MongooseProfile.deleteOne({ _id: profileId });\n\n//     return;\n//   }\n// }\n"]}