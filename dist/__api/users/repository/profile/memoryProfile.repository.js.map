{"version":3,"file":"memoryProfile.repository.js","sourceRoot":"","sources":["../../../../../src/__api/users/repository/profile/memoryProfile.repository.ts"],"names":[],"mappings":";AAAA,sEAAsE;AACtE,6DAA6D;AAC7D,yFAAyF;AAEzF,sEAAsE;AACtE,sBAAsB;AACtB,8DAA8D;AAE9D,mEAAmE;AACnE,uCAAuC;AACvC,oBAAoB;AACpB,0DAA0D;AAC1D,UAAU;AAEV,oEAAoE;AAEpE,yBAAyB;AACzB,MAAM;AACN,2CAA2C;AAC3C,yEAAyE;AAEzE,qBAAqB;AACrB,MAAM;AACN,2DAA2D;AAC3D,iEAAiE;AAEjE,kCAAkC;AAClC,MAAM;AACN,kBAAkB;AAClB,yBAAyB;AACzB,2CAA2C;AAC3C,2BAA2B;AAC3B,wEAAwE;AAExE,0BAA0B;AAC1B,yDAAyD;AACzD,QAAQ;AAER,qDAAqD;AACrD,wBAAwB;AACxB,8BAA8B;AAC9B,UAAU;AAEV,4DAA4D;AAC5D,MAAM;AACN,qDAAqD;AACrD,wEAAwE;AAExE,0BAA0B;AAC1B,yDAAyD;AACzD,QAAQ;AAER,uDAAuD;AACvD,MAAM;AACN,IAAI","sourcesContent":["// import HttpException from \"@/api/common/exceptions/http.exception\";\n// import { Profile } from \"@/api/users/model/profile.model\";\n// import { ProfileRepository } from \"@/api/users/repository/profile/profile.repository\";\n\n// export class MemoryProfileRepository implements ProfileRepository {\n//   static index = 0;\n//   static readonly store: Map<string, IProfile> = new Map();\n\n//   async save(profile: Omit<IProfile, \"id\">): Promise<IProfile> {\n//     const newProfile = new Profile({\n//       ...profile,\n//       id: `profile-${MemoryProfileRepository.index++}`,\n//     });\n\n//     MemoryProfileRepository.store.set(newProfile.id, newProfile);\n\n//     return newProfile;\n//   }\n//   async findAll(): Promise<IProfile[]> {\n//     const values = Array.from(MemoryProfileRepository.store.values());\n\n//     return values;\n//   }\n//   async findById(id: string): Promise<IProfile | null> {\n//     const findProfile = MemoryProfileRepository.store.get(id);\n\n//     return findProfile ?? null;\n//   }\n//   async update(\n//     profileId: string,\n//     updateProfileInfo: Partial<IProfile>\n//   ): Promise<IProfile> {\n//     const findProfile = MemoryProfileRepository.store.get(profileId);\n\n//     if (!findProfile) {\n//       throw new HttpException(404, \"프로필을 찾을 수 없습니다.\");\n//     }\n\n//     MemoryProfileRepository.store.set(profileId, {\n//       ...findProfile,\n//       ...updateProfileInfo,\n//     });\n\n//     return MemoryProfileRepository.store.get(profileId)!;\n//   }\n//   async delete(profileId: string): Promise<void> {\n//     const findProfile = MemoryProfileRepository.store.get(profileId);\n\n//     if (!findProfile) {\n//       throw new HttpException(404, \"프로필을 찾을 수 없습니다.\");\n//     }\n\n//     MemoryProfileRepository.store.delete(profileId);\n//   }\n// }\n"]}