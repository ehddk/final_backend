{"version":3,"file":"authCookie.middleware.js","sourceRoot":"","sources":["../../../../src/__api/common/middlewares/authCookie.middleware.ts"],"names":[],"mappings":";;;;;;AACA,kFAAyD;AACzD,yDAAqD;AAErD,4BAA4B;AACrB,MAAM,wBAAwB,GAAG,CAAC,eAAwB,IAAI,EAAE,EAAE;IACvE,OAAO,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;QACzD,IAAI,CAAC;YACH,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC;YAEtC,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAE7C,IAAI,CAAC,KAAK,EAAE,CAAC;gBACX,GAAG,CAAC,IAAI,GAAG;oBACT,MAAM,EAAE,EAAE;oBACV,IAAI,EAAE,MAAM;iBACb,CAAC;gBAEF,IAAI,YAAY,EAAE,CAAC;oBACjB,MAAM,IAAI,wBAAa,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;gBACxC,CAAC;gBAED,IAAI,EAAE,CAAC;gBACP,OAAO;YACT,CAAC;YAED,MAAM,OAAO,GAAG,wBAAU,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;YAEzD,GAAG,CAAC,IAAI,GAAG;gBACT,MAAM,EAAE,OAAO,CAAC,MAAM;gBACtB,IAAI,EAAE,OAAO,CAAC,IAAI;aACnB,CAAC;YAEF,IAAI,EAAE,CAAC;QACT,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,0DAA0D;YAC1D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,wBAAwB,GAAG,CAAC,WAAW,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5E,CAAC;IACH,CAAC,CAAC;AACJ,CAAC,CAAC;AAlCW,QAAA,wBAAwB,4BAkCnC","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nimport HttpException from \"../exceptions/http.exception\";\nimport { JwtService } from \"../services/jwt.service\";\n\n/** 쿠키속 토큰으로 인증하는 인증 미들웨어 */\nexport const authCookieViewMiddleware = (authRedirect: boolean = true) => {\n  return (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const token = req.cookies.accessToken;\n\n      const tokenValue = token.split(\"Bearer \")[1];\n\n      if (!token) {\n        req.user = {\n          userId: \"\",\n          role: \"user\",\n        };\n\n        if (authRedirect) {\n          throw new HttpException(401, \"인증 실패\");\n        }\n\n        next();\n        return;\n      }\n\n      const payload = JwtService.verifyAccessToken(tokenValue);\n\n      req.user = {\n        userId: payload.userId,\n        role: payload.role,\n      };\n\n      next();\n    } catch (error: any) {\n      // next(new HttpException(401, `인증 실패 ${error.message}`));\n      res.status(302).redirect(`/auth/login?redirect=${req.originalUrl || \"\"}`);\n    }\n  };\n};\n"]}