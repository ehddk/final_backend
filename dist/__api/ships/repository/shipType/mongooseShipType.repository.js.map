{"version":3,"file":"mongooseShipType.repository.js","sourceRoot":"","sources":["../../../../../src/__api/ships/repository/shipType/mongooseShipType.repository.ts"],"names":[],"mappings":";;;;;;AAAA,4FAAmE;AACnE,uEAAqE;AAGrE,MAAa,0BAA0B;IACrC,KAAK,CAAC,IAAI,CAAC,QAA+B;QACxC,MAAM,WAAW,GAAG,IAAI,kCAAgB,CAAC,QAAQ,CAAC,CAAC;QACnD,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;QACzB,OAAO,WAAW,CAAC;IACrB,CAAC;IACD,KAAK,CAAC,OAAO;QACX,OAAO,MAAM,kCAAgB,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAC9D,CAAC;IACD,KAAK,CAAC,QAAQ,CAAC,EAAU;QACvB,OAAO,MAAM,kCAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IACpE,CAAC;IACD,KAAK,CAAC,MAAM,CACV,UAAkB,EAClB,kBAAsC;QAEtC,MAAM,OAAO,GAAG,MAAM,kCAAgB,CAAC,iBAAiB,CACtD,UAAU,EACV,kBAAkB,CACnB,CAAC;QACF,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,MAAM,IAAI,wBAAa,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;QACpD,CAAC;QACD,OAAO;IACT,CAAC;IACD,KAAK,CAAC,MAAM,CAAC,UAAkB;QAC7B,MAAM,MAAM,GAAG,kCAAgB,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;QACzE,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,IAAI,wBAAa,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;QACpD,CAAC;QACD,OAAO;IACT,CAAC;CACF;AAhCD,gEAgCC","sourcesContent":["import HttpException from \"@/api/common/exceptions/http.exception\";\nimport { MongooseShipType } from \"@/api/ships/model/shipType.schema\";\nimport { ShipTypeRepository } from \"@/api/ships/repository/shipType/shipType.repository\";\n\nexport class MongooseShipTypeRepository implements ShipTypeRepository {\n  async save(shipType: Omit<IShipType, \"id\">): Promise<IShipType> {\n    const newShipType = new MongooseShipType(shipType);\n    await newShipType.save();\n    return newShipType;\n  }\n  async findAll(): Promise<IShipType[]> {\n    return await MongooseShipType.find().populate(\"ShipStatus\");\n  }\n  async findById(id: string): Promise<IShipType | null> {\n    return await MongooseShipType.findById(id).populate(\"ShipStatus\");\n  }\n  async update(\n    shipTypeId: string,\n    updateShipTypeInfo: Partial<IShipType>\n  ): Promise<void> {\n    const results = await MongooseShipType.findByIdAndUpdate(\n      shipTypeId,\n      updateShipTypeInfo\n    );\n    if (!results) {\n      throw new HttpException(404, \"함선 타입을 찾을 수 없습니다.\");\n    }\n    return;\n  }\n  async delete(shipTypeId: string): Promise<void> {\n    const result = MongooseShipType.deleteMany({ _id: { $in: shipTypeId } });\n    if (!result) {\n      throw new HttpException(404, \"함선 타입을 찾을 수 없습니다.\");\n    }\n    return;\n  }\n}\n"]}