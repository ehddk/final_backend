{"version":3,"file":"adminShipStatus.controller.js","sourceRoot":"","sources":["../../../../src/__api/ships/controller/adminShipStatus.controller.ts"],"names":[],"mappings":";;AAGA,MAAqB,yBAAyB;IACxB;IAApB,YAAoB,iBAAmC;QAAnC,sBAAiB,GAAjB,iBAAiB,CAAkB;QACrD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrE,CAAC;IAED,qBAAqB;IACrB,KAAK,CAAC,kBAAkB,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACtE,IAAI,CAAC;YACH,MAAM,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;YAChC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACxE,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACvB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,CAAC;QACd,CAAC;IACH,CAAC;IAED,qBAAqB;IACrB,KAAK,CAAC,qBAAqB,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACzE,IAAI,CAAC;YACH,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAC9D,GAAG,CAAC,IAAI,CACT,CAAC;YACF,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACvB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,CAAC;QACd,CAAC;IACH,CAAC;IAED,qBAAqB;IACrB,KAAK,CAAC,qBAAqB,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACzE,IAAI,CAAC;YACH,MAAM,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;YAChC,MAAM,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YAClE,GAAG,CAAC,IAAI,EAAE,CAAC;QACb,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,CAAC;QACd,CAAC;IACH,CAAC;IAED,qBAAqB;IACrB,KAAK,CAAC,qBAAqB,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACzE,IAAI,CAAC;YACH,MAAM,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;YAChC,MAAM,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YACxD,GAAG,CAAC,IAAI,EAAE,CAAC;QACb,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,CAAC;QACd,CAAC;IACH,CAAC;CACF;AApDD,4CAoDC","sourcesContent":["import e, { Request, Response, NextFunction } from \"express\";\nimport { AdminShipService } from \"@/api/ships/service/adminShips.service.type\";\n\nexport default class AdminShipStatusController {\n  constructor(private _adminShipService: AdminShipService) {\n    this.getAdminShipStatus = this.getAdminShipStatus.bind(this);\n    this.createAdminShipStatus = this.createAdminShipStatus.bind(this);\n    this.updateAdminShipStatus = this.updateAdminShipStatus.bind(this);\n    this.deleteAdminShipStatus = this.deleteAdminShipStatus.bind(this);\n  }\n\n  /** 함선 상태 조회 (관리자) */\n  async getAdminShipStatus(req: Request, res: Response, next: NextFunction) {\n    try {\n      const { statusId } = req.params;\n      const shipStatus = await this._adminShipService.getShipStatus(statusId);\n      res.send(shipStatus);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 함선 상태 생성 (관리자) */\n  async createAdminShipStatus(req: Request, res: Response, next: NextFunction) {\n    try {\n      const shipStatus = await this._adminShipService.createShipStatus(\n        req.body\n      );\n      res.send(shipStatus);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 함선 상태 수정 (관리자) */\n  async updateAdminShipStatus(req: Request, res: Response, next: NextFunction) {\n    try {\n      const { statusId } = req.params;\n      await this._adminShipService.updateShipStatus(statusId, req.body);\n      res.send();\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 함선 상태 삭제 (관리자) */\n  async deleteAdminShipStatus(req: Request, res: Response, next: NextFunction) {\n    try {\n      const { statusId } = req.params;\n      await this._adminShipService.deleteShipStatus(statusId);\n      res.send();\n    } catch (error) {\n      next(error);\n    }\n  }\n}\n"]}