{"version":3,"file":"adminShipTypes.controller.js","sourceRoot":"","sources":["../../../../src/__api/ships/controller/adminShipTypes.controller.ts"],"names":[],"mappings":";;AAGA,MAAqB,wBAAwB;IACvB;IAApB,YAAoB,iBAAmC;QAAnC,sBAAiB,GAAjB,iBAAiB,CAAkB;QACrD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjE,CAAC;IAED,qBAAqB;IACrB,KAAK,CAAC,gBAAgB,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACpE,IAAI,CAAC;YACH,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;YAE9B,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAElE,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,CAAC;QACd,CAAC;IACH,CAAC;IAED,qBAAqB;IACrB,KAAK,CAAC,mBAAmB,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACvE,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAEvE,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,CAAC;QACd,CAAC;IACH,CAAC;IACD,qBAAqB;IACrB,KAAK,CAAC,mBAAmB,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACvE,IAAI,CAAC;YACH,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;YAE9B,MAAM,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YAE9D,GAAG,CAAC,IAAI,EAAE,CAAC;QACb,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,CAAC;QACd,CAAC;IACH,CAAC;IACD,qBAAqB;IACrB,KAAK,CAAC,mBAAmB,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACvE,IAAI,CAAC;YACH,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;YAE9B,MAAM,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YAEpD,GAAG,CAAC,IAAI,EAAE,CAAC;QACb,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,CAAC;QACd,CAAC;IACH,CAAC;CACF;AAvDD,2CAuDC","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nimport { AdminShipService } from \"@/api/ships/service/adminShips.service.type\";\n\nexport default class AdminShipTypesController {\n  constructor(private _adminShipService: AdminShipService) {\n    this.getAdminShipType = this.getAdminShipType.bind(this);\n    this.createAdminShipType = this.createAdminShipType.bind(this);\n    this.updateAdminShipType = this.updateAdminShipType.bind(this);\n    this.deleteAdminShipType = this.deleteAdminShipType.bind(this);\n  }\n\n  /** 함선 종류 조회 (관리자) */\n  async getAdminShipType(req: Request, res: Response, next: NextFunction) {\n    try {\n      const { typeId } = req.params;\n\n      const shipType = await this._adminShipService.getShipType(typeId);\n\n      res.send(shipType);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 함선 종류 생성 (관리자) */\n  async createAdminShipType(req: Request, res: Response, next: NextFunction) {\n    try {\n      const shipType = await this._adminShipService.createShipType(req.body);\n\n      res.send(shipType);\n    } catch (error) {\n      next(error);\n    }\n  }\n  /** 함선 종류 수정 (관리자) */\n  async updateAdminShipType(req: Request, res: Response, next: NextFunction) {\n    try {\n      const { typeId } = req.params;\n\n      await this._adminShipService.updateShipType(typeId, req.body);\n\n      res.send();\n    } catch (error) {\n      next(error);\n    }\n  }\n  /** 함선 종류 삭제 (관리자) */\n  async deleteAdminShipType(req: Request, res: Response, next: NextFunction) {\n    try {\n      const { typeId } = req.params;\n\n      await this._adminShipService.deleteShipType(typeId);\n\n      res.send();\n    } catch (error) {\n      next(error);\n    }\n  }\n}\n"]}