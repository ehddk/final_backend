{"version":3,"file":"adminShips.controller.js","sourceRoot":"","sources":["../../../../src/__api/ships/controller/adminShips.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nimport { AdminShipService } from \"@/api/ships/service/adminShips.service.type\";\n\nexport default class AdminShipsController {\n  constructor(private _adminShipService: AdminShipService) {\n    this.getAdminShipsList = this.getAdminShipsList.bind(this);\n    this.getAdminShipInfo = this.getAdminShipInfo.bind(this);\n    this.createAdminShip = this.createAdminShip.bind(this);\n    this.updateAdminShip = this.updateAdminShip.bind(this);\n    this.deleteAdminShip = this.deleteAdminShip.bind(this);\n    this.deleteAdminShips = this.deleteAdminShips.bind(this);\n  }\n\n  /** 함선 목록 조회 (관리자) */\n  async getAdminShipsList(req: Request, res: Response, next: NextFunction) {\n    try {\n      const ships = await this._adminShipService.getShips();\n\n      res.send(ships);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 함선 상세 조회 (관리자) */\n  async getAdminShipInfo(req: Request, res: Response, next: NextFunction) {\n    try {\n      const { shipId } = req.params;\n\n      const ship = await this._adminShipService.getShip(shipId);\n\n      res.send(ship);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 함선 생성 (관리자) */\n  async createAdminShip(\n    req: Request<\n      createAdminShipRequest[\"path\"],\n      createAdminShipResponse,\n      createAdminShipRequest[\"body\"],\n      createAdminShipRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    try {\n      const ship = await this._adminShipService.createShip(req.body);\n\n      res.send(ship);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 함선 수정 (관리자) */\n  async updateAdminShip(\n    req: Request<\n      updateAdminShipRequest[\"path\"],\n      updateAdminShipResponse,\n      updateAdminShipRequest[\"body\"],\n      updateAdminShipRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    try {\n      const { shipId } = req.params;\n\n      await this._adminShipService.updateShip(shipId, req.body);\n\n      res.send();\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 함선 삭제 (관리자) */\n  async deleteAdminShip(\n    req: Request<\n      deleteAdminShipRequest[\"path\"],\n      deleteAdminShipResponse,\n      deleteAdminShipRequest[\"body\"],\n      deleteAdminShipRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    try {\n      const { shipId } = req.params;\n\n      await this._adminShipService.deleteShip(shipId);\n\n      res.send();\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 다수의 함선 삭제 (관리자) */\n  async deleteAdminShips(\n    req: Request<\n      deleteAdminShipsRequest[\"path\"],\n      deleteAdminShipsResponse,\n      deleteAdminShipsRequest[\"body\"],\n      deleteAdminShipsRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    try {\n      const { shipIds } = req.body;\n\n      await this._adminShipService.deleteShips(shipIds);\n\n      res.send();\n    } catch (error) {\n      next(error);\n    }\n  }\n}\n"]}