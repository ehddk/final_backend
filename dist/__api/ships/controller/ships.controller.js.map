{"version":3,"file":"ships.controller.js","sourceRoot":"","sources":["../../../../src/__api/ships/controller/ships.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nimport { ShipService } from \"@/api/ships/service/ships.service.type\";\n\nexport default class ShipsController {\n  constructor(private _shipService: ShipService) {\n    this.getFleetShipsList = this.getFleetShipsList.bind(this);\n    this.getFlagshipInfo = this.getFlagshipInfo.bind(this);\n    this.getShipInfo = this.getShipInfo.bind(this);\n    this.createShip = this.createShip.bind(this);\n    this.updateShip = this.updateShip.bind(this);\n    this.deleteShip = this.deleteShip.bind(this);\n  }\n\n  /** 함대의 함선 리스트 조회 */\n  async getFleetShipsList(\n    req: Request<\n      getFleetShipsListRequest[\"path\"],\n      getFleetShipsListResponse,\n      getFleetShipsListRequest[\"body\"],\n      getFleetShipsListRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    try {\n      const { fleetId } = req.params;\n      const ships = await this._shipService.getFleetShipsList(fleetId);\n      res.send(ships);\n    } catch (error) {\n      next(error);\n    }\n  }\n  /** 기함 정보 조회 */\n  async getFlagshipInfo(\n    req: Request<\n      getFlagshipInfoRequest[\"path\"],\n      getFlagshipInfoResponse,\n      getFlagshipInfoRequest[\"body\"],\n      getFlagshipInfoRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    try {\n      const { userId } = req.params;\n      const flagship = await this._shipService.getFlagshipInfo(userId);\n      console.log(flagship);\n      res.send(flagship);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 특정 함선 정보 조회 */\n  async getShipInfo(\n    req: Request<\n      getShipInfoRequest[\"path\"],\n      getShipInfoResponse,\n      getShipInfoRequest[\"body\"],\n      getShipInfoRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    try {\n      const { shipId } = req.params;\n      const ship = await this._shipService.getShipInfo(shipId);\n      res.send(ship);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 함선 만들기  */\n  async createShip(\n    req: Request<\n      createShipRequest[\"path\"],\n      createShipResponse,\n      createShipRequest[\"body\"],\n      createShipRequest[\"params\"]\n    >,\n    res: Response,\n    next: NextFunction\n  ) {\n    try {\n      const ship = await this._shipService.createShip(req.body);\n      res.send(ship);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 함선 정보 수정 */\n  async updateShip(req: Request, res: Response, next: NextFunction) {\n    try {\n      const { shipId } = req.params;\n      await this._shipService.updateShip(shipId, req.body);\n      res.send();\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  /** 함선 삭제 */\n  async deleteShip(req: Request, res: Response, next: NextFunction) {\n    try {\n      const { shipId } = req.params;\n      await this._shipService.deleteShip(shipId);\n      res.send();\n    } catch (error) {\n      next(error);\n    }\n  }\n}\n"]}