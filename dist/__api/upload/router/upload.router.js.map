{"version":3,"file":"upload.router.js","sourceRoot":"","sources":["../../../../src/__api/upload/router/upload.router.ts"],"names":[],"mappings":";;;;;AAAA,uCAAyC;AACzC,iDAAgD;AAChD,sDAA8B;AAC9B,6CAA+C;AAE/C,MAAM,YAAY,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEtC,MAAM,YAAY,GAAG;IACnB,YAAY,EAAE,mBAAmB;IACjC,aAAa,EAAE,oBAAoB;CAC3B,CAAC;AAEX,YAAY,CAAC,IAAI,CACf,IAAA,uBAAW,EAAC,YAAY,CAAC,YAAY,EAAE,sBAAY,CAAC,UAAU,CAAC,EAC/D,oBAAW,CAAC,MAAM,CAAC,UAAU,CAAC,EAC9B,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IACjB,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,uBAAuB,CAAC;IAErE,MAAM,IAAI,GAAG,GAAG,CAAC,IAA2B,CAAC;IAE7C,GAAG,CAAC,IAAI,CAAC;QACP,GAAG,EAAE,GAAG,UAAU,mBAAmB,IAAI,EAAE,QAAQ,EAAE;KACtD,CAAC,CAAC;AACL,CAAC,CACF,CAAC;AAEF,YAAY,CAAC,IAAI,CACf,IAAA,uBAAW,EAAC,YAAY,CAAC,aAAa,EAAE,sBAAY,CAAC,UAAU,CAAC,EAChE,oBAAW,CAAC,KAAK,CAAC,WAAW,CAAC,EAC9B,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IACjB,IAAI,CAAC;QACH,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,uBAAuB,CAAC;QAErE,MAAM,KAAK,GAAG,GAAG,CAAC,KAA8B,CAAC;QAEjD,GAAG,CAAC,IAAI,CAAC;YACP,KAAK,EAAE,KAAK,CAAC,GAAG,CACd,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,UAAU,mBAAmB,IAAI,CAAC,QAAQ,EAAE,CAC1D;SACF,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,CAAC;IACd,CAAC;AACH,CAAC,CACF,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["import { ROUTES_INDEX } from \"@/routers\";\nimport { extractPath } from \"@/utils/path.util\";\nimport express from \"express\";\nimport { imageUpload } from \"@/vendors/multer\";\n\nconst uploadRouter = express.Router();\n\nconst UPLOD_ROUTES = {\n  UPLOAD_IMAGE: \"/api/upload/image\",\n  UPLOAD_IMAGES: \"/api/upload/images\",\n} as const;\n\nuploadRouter.post(\n  extractPath(UPLOD_ROUTES.UPLOAD_IMAGE, ROUTES_INDEX.UPLOAD_API),\n  imageUpload.single(\"filename\"),\n  (req, res, next) => {\n    const SERVER_URL = process.env.SERVER_URL || \"http://localhost:4000\";\n\n    const file = req.file as Express.Multer.File;\n\n    res.json({\n      url: `${SERVER_URL}/static/uploads/${file?.filename}`,\n    });\n  }\n);\n\nuploadRouter.post(\n  extractPath(UPLOD_ROUTES.UPLOAD_IMAGES, ROUTES_INDEX.UPLOAD_API),\n  imageUpload.array(\"filenames\"),\n  (req, res, next) => {\n    try {\n      const SERVER_URL = process.env.SERVER_URL || \"http://localhost:4000\";\n\n      const files = req.files as Express.Multer.File[];\n\n      res.json({\n        files: files.map(\n          (file) => `${SERVER_URL}/static/uploads/${file.filename}`\n        ),\n      });\n    } catch (error) {\n      console.error(error);\n      next(error);\n    }\n  }\n);\n\nexport default uploadRouter;\n"]}