{"version":3,"file":"adminPost.router.js","sourceRoot":"","sources":["../../../../src/__api/posts/router/adminPost.router.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,yGAAgF;AAChF,qEAAqE;AACrE,0FAA0E;AAC1E,2FAM0D;AAC1D,iGAA6F;AAC7F,4FAAwF;AACxF,iDAAgD;AAChD,uCAAyC;AACzC,sFAAkF;AAElF,MAAM,eAAe,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEzC,oBAAoB;AACpB,MAAM,iBAAiB,GAAG;IACxB,mBAAmB;IACnB,SAAS,EAAE,kBAAkB;IAC7B,mBAAmB;IACnB,QAAQ,EAAE,0BAA0B;IACpC,iBAAiB;IACjB,WAAW,EAAE,kBAAkB;IAC/B,gBAAgB;IAChB,WAAW,EAAE,0BAA0B;IACvC,gBAAgB;IAChB,WAAW,EAAE,0BAA0B;IACvC,eAAe;IACf,YAAY,EAAE,wBAAwB;CAC9B,CAAC;AAEX,MAAM,oBAAoB,GAAG,IAAI,+BAAoB,CACnD,IAAI,gCAAgB,CAClB,IAAI,gDAAsB,EAAE,EAC5B,IAAI,gDAAsB,EAAE,CAC7B,CACF,CAAC;AAEF,eAAe,CAAC,GAAG,CACjB,IAAA,uBAAW,EAAC,iBAAiB,CAAC,SAAS,EAAE,sBAAY,CAAC,eAAe,CAAC,EACtE,IAAA,gCAAQ,EAAC,6CAAsB,CAAC,EAChC,oBAAoB,CAAC,QAAQ,CAC9B,CAAC;AACF,eAAe,CAAC,GAAG,CACjB,IAAA,uBAAW,EAAC,iBAAiB,CAAC,QAAQ,EAAE,sBAAY,CAAC,eAAe,CAAC,EACrE,IAAA,gCAAQ,EAAC,kDAA2B,CAAC,EACrC,wCAAkB,EAClB,oBAAoB,CAAC,aAAa,CACnC,CAAC;AAEF,eAAe,CAAC,IAAI,CAClB,IAAA,uBAAW,EAAC,iBAAiB,CAAC,YAAY,EAAE,sBAAY,CAAC,eAAe,CAAC,EACzE,oBAAoB,CAAC,WAAW,CACjC,CAAC;AACF,eAAe,CAAC,IAAI,CAClB,IAAA,uBAAW,EAAC,iBAAiB,CAAC,WAAW,EAAE,sBAAY,CAAC,eAAe,CAAC,EACxE,IAAA,gCAAQ,EAAC,+CAAwB,CAAC,EAClC,wCAAkB,EAClB,oBAAoB,CAAC,UAAU,CAChC,CAAC;AACF,eAAe,CAAC,GAAG,CACjB,IAAA,uBAAW,EAAC,iBAAiB,CAAC,WAAW,EAAE,sBAAY,CAAC,eAAe,CAAC,EACxE,IAAA,gCAAQ,EAAC,+CAAwB,CAAC,EAClC,oBAAoB,CAAC,UAAU,CAChC,CAAC;AACF,eAAe,CAAC,MAAM,CACpB,IAAA,uBAAW,EAAC,iBAAiB,CAAC,WAAW,EAAE,sBAAY,CAAC,eAAe,CAAC,EACxE,IAAA,gCAAQ,EAAC,+CAAwB,CAAC,EAClC,oBAAoB,CAAC,UAAU,CAChC,CAAC;AAEF,kBAAe,eAAe,CAAC","sourcesContent":["import express from \"express\";\nimport AdminPostsController from \"@/api/posts/controller/adminPosts.controller\";\nimport { PostsServiceImpl } from \"@/api/posts/service/posts.service\";\nimport { validate } from \"@/api/common/middlewares/validation.middleware\";\nimport {\n  adminCreatePostValidator,\n  adminDeletePostValidator,\n  adminGetPostDetailValidator,\n  adminGetPostsValidator,\n  adminUpdatePostValidator,\n} from \"@/api/posts/dto/validations/adminPost.validation\";\nimport { MongooseUserRepository } from \"@/api/users/repository/user/mongooseUser.repository\";\nimport { MongoosePostRepository } from \"@/api/posts/repository/mongoosePost.repository\";\nimport { extractPath } from \"@/utils/path.util\";\nimport { ROUTES_INDEX } from \"@/routers\";\nimport { authUserMiddleware } from \"@/api/common/middlewares/authUser.middleware\";\n\nconst adminPostRouter = express.Router();\n\n/*관리자 게판 관련 API 객체*/\nconst ADMIN_POST_ROUTES = {\n  /**글 목록 조회 (관리자) */\n  GET_POSTS: `/admin-api/posts`,\n  /**글 상세 조회 (관리자) */\n  GET_POST: `/admin-api/posts/:postId`,\n  /**글 생성 (관리자)  */\n  CREATE_POST: `/admin-api/posts`,\n  /**글 수정 (관리자) */\n  UPDATE_POST: `/admin-api/posts/:postId`,\n  /**글 삭제 (관리자) */\n  DELETE_POST: `/admin-api/posts/:postId`,\n  /** 더미데이터 생성 */\n  CREATE_DUMMY: `/admin-api/posts/dummy`,\n} as const;\n\nconst adminPostsController = new AdminPostsController(\n  new PostsServiceImpl(\n    new MongoosePostRepository(),\n    new MongooseUserRepository()\n  )\n);\n\nadminPostRouter.get(\n  extractPath(ADMIN_POST_ROUTES.GET_POSTS, ROUTES_INDEX.ADMIN_POSTS_API),\n  validate(adminGetPostsValidator),\n  adminPostsController.getPosts\n);\nadminPostRouter.get(\n  extractPath(ADMIN_POST_ROUTES.GET_POST, ROUTES_INDEX.ADMIN_POSTS_API),\n  validate(adminGetPostDetailValidator),\n  authUserMiddleware,\n  adminPostsController.getPostDetail\n);\n\nadminPostRouter.post(\n  extractPath(ADMIN_POST_ROUTES.CREATE_DUMMY, ROUTES_INDEX.ADMIN_POSTS_API),\n  adminPostsController.createDummy\n);\nadminPostRouter.post(\n  extractPath(ADMIN_POST_ROUTES.CREATE_POST, ROUTES_INDEX.ADMIN_POSTS_API),\n  validate(adminCreatePostValidator),\n  authUserMiddleware,\n  adminPostsController.createPost\n);\nadminPostRouter.put(\n  extractPath(ADMIN_POST_ROUTES.UPDATE_POST, ROUTES_INDEX.ADMIN_POSTS_API),\n  validate(adminUpdatePostValidator),\n  adminPostsController.updatePost\n);\nadminPostRouter.delete(\n  extractPath(ADMIN_POST_ROUTES.DELETE_POST, ROUTES_INDEX.ADMIN_POSTS_API),\n  validate(adminDeletePostValidator),\n  adminPostsController.deletePost\n);\n\nexport default adminPostRouter;\n"]}