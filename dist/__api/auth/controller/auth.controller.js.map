{"version":3,"file":"auth.controller.js","sourceRoot":"","sources":["../../../../src/__api/auth/controller/auth.controller.ts"],"names":[],"mappings":";;AAGA,MAAqB,cAAc;IAChB,YAAY,CAAc;IAC3C,YAAY,WAAwB;QAClC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,KAAK,CAAC,KAAK,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACzD,IAAI,CAAC;YACH,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;YAErC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YAE9D,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,CAAC;QACd,CAAC;IACH,CAAC;CACF;AAlBD,iCAkBC","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\nimport { AuthService } from \"@/api/auth/service/auth.service.type\";\n\nexport default class AuthController {\n  private readonly _authService: AuthService;\n  constructor(authService: AuthService) {\n    this._authService = authService;\n    this.login = this.login.bind(this);\n  }\n\n  async login(req: Request, res: Response, next: NextFunction) {\n    try {\n      const { email, password } = req.body;\n\n      const result = await this._authService.login(email, password);\n\n      res.send(result);\n    } catch (error) {\n      next(error);\n    }\n  }\n}\n"]}