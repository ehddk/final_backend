<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link
      href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <link
      href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const $form2 = document.getElementById("form");

        console.log("form2", $form2);
      });
    </script>
  </head>
  <body>
    클라이언트 페이지 게시글 수정
    <form id="form">
      <label for="title">
        <span>제목</span>
        <input type="text" id="title" name="title" value="<%= post.title %>" />
      </label>
      <label for="content">
        <span>내용</span>
        <div id="summernote"><%- post.content %></div>
      </label>
      <button type="submit" id="edit-button">수정</button>
    </form>
    <button id="sample">샘플버튼</button>
    <a href="/posts/<%= post.postId %>">취소</a>
    <script>
      async function getToken() {
        const cookies = document.cookie.split(";").reduce((acc, cookie) => {
          const [key, value] = cookie.split("=");
          acc[key.trim()] = decodeURIComponent(value);
          return acc;
        }, {});

        const token = `${cookies.accessToken}`;

        return token;
      }

      async function editPost(postId, content) {
        const res = await fetch(`/api/posts/${postId}`, {
          method: "put",
          headers: {
            "Content-Type": "application/json",
            authorization: await getToken(),
          },
          body: JSON.stringify(content),
        });

        if (!res.ok) {
          throw new Error("게시글 수정에 실패했습니다.");
        }
      }
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        $("#summernote").summernote({
          callbacks: {
            onImageUpload: async function (files) {
              for (const file of files) {
                const formData = new FormData();
                formData.append("filename", file);

                const fileUploadRes = await fetch("/api/upload/image", {
                  method: "POST",
                  body: formData,
                });

                const data = await fileUploadRes.json();

                let imageData = document.createElement("img");
                imageData.src = data.url;
                $("#summernote").summernote("insertNode", imageData);
              }
            },
          },
        });
      });
    </script>
    <script>
      const $sampleButton = document.getElementById("sample");
      async function handleSubmit(e) {
        e.preventDefault();
        try {
          const title = $form.title.value;
          const content = $("#summernote").summernote("code");

          await editPost("<%= post.postId %>", { title, content });

          location.href = `/posts/<%= post.postId %>`;
        } catch (error) {
          console.error(error);
          alert("게시글 수정에 실패했습니다.", error.message);
        }
      }
      const $form = document.getElementById("form");

      $form.addEventListener("submit", handleSubmit);

      // $sampleButton.onclick = () => {
      //   console.log("클릭");
      // };

      // $sampleButton.onclick = () => {
      //   console.log("클릭2");
      // };

      $sampleButton.addEventListener("click", () => {
        console.log("클릭");
      });
      $sampleButton.addEventListener("click", () => {
        console.log("클릭2");
      });

      $form.onsubmit = handleSubmit;
    </script>
  </body>
</html>
